<?php

function gm_agenda_theme() {
  return [
    'item_list_upcoming_wall' => [
      'variables' => ['items' => [], 'title' => '', 'list_type' => 'ul', 'wrapper_attributes' => [], 'attributes' => [], 'empty' => NULL],
    ],
    'gm_upcoming_block' => [
      'variables' => [
        'node_list' => NULL,
        'var1' => NULL,
      ],
    ],
    'gm_agenda_list' => [
      'variables' => [
        'node_list' => NULL,
        // 'order' => NULL,
        // 'day' => NULL,
      ],
    ],
    'gm_agenda_by_month' => [
      'variables' => [
        'node_list' => NULL,
        'event_today' => NULL,
        'prev_data' => NULL,
        'next_data' => NULL,
        'current_data' => NULL,
        'is_today' => NULL,
        'pager_data' => NULL,  
        'filter_regions' => NULL,
        'all_filter_regions' => NULL,
        'current_langcode' => NULL,
        'path_module' => NULL
      ],
    ],
  ];
}

function gm_agenda_preprocess_block(&$variables) {
  // ksm($variables);
}
/**
 * Prepares variables for bdc_menu_item templates.
 *
 * Default template: bdc-menu-item.html.twig.
 *
 * @param array $variables
 */
function template_preprocess_item_list_upcoming_wall(&$variables) {

  $variables['wrapper_attributes'] = new Attribute($variables['wrapper_attributes']);
  foreach ($variables['items'] as &$item) {
    $attributes = [];
    // If the item value is an array, then it is a render array.
    if (is_array($item)) {
      // List items support attributes via the '#wrapper_attributes' property.
      if (isset($item['#wrapper_attributes'])) {
        $attributes = $item['#wrapper_attributes'];
      }
      // Determine whether there are any child elements in the item that are not
      // fully-specified render arrays. If there are any, then the child
      // elements present nested lists and we automatically inherit the render
      // array properties of the current list to them.
      foreach (Element::children($item) as $key) {
        $child = &$item[$key];
        // If this child element does not specify how it can be rendered, then
        // we need to inherit the render properties of the current list.
        if (!isset($child['#type']) && !isset($child['#theme']) && !isset($child['#markup'])) {
          // Since item-list.html.twig supports both strings and render arrays
          // as items, the items of the nested list may have been specified as
          // the child elements of the nested list, instead of #items. For
          // convenience, we automatically move them into #items.
          if (!isset($child['#items'])) {
            // This is the same condition as in
            // \Drupal\Core\Render\Element::children(), which cannot be used
            // here, since it triggers an error on string values.
            foreach ($child as $child_key => $child_value) {
              if (is_int($child_key) || $child_key === '' || $child_key[0] !== '#') {
                $child['#items'][$child_key] = $child_value;
                unset($child[$child_key]);
              }
            }
          }
          // Lastly, inherit the original theme variables of the current list.
          $child['#theme'] = $variables['theme_hook_original'];
          $child['#list_type'] = $variables['list_type'];
        }
      }
    }

    // Set the item's value and attributes for the template.
    $item = [
      'value' => $item,
      'attributes' => new Attribute($attributes),
    ];
  }
}